{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matea\\\\Desktop\\\\projekt-MateaLaca\\\\frontend\\\\App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport Navigator from \"./navigacija/Navigator\";\nimport axios from 'axios';\nvar promise = axios.get('http://localhost:3001/api/vjezbe');\nconsole.log(promise);\nvar promise2 = axios.get('http://localhost:3001/api/v22jezbe');\nconsole.log(promise2);\n\nvar ucitajFontove = function ucitajFontove() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n    \"raleway\": require(\"./assets/fonts/Raleway-Regular.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontUcitan = _useState2[0],\n      postaviFontUcitan = _useState2[1];\n\n  if (!fontUcitan) {\n    return React.createElement(AppLoading, {\n      startAsync: ucitajFontove,\n      onFinish: function onFinish() {\n        return postaviFontUcitan(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  });\n}\nvar stil = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Matea/Desktop/projekt-MateaLaca/frontend/App.js"],"names":["React","useState","AppLoading","Font","Navigator","axios","promise","get","console","log","promise2","ucitajFontove","loadAsync","require","App","fontUcitan","postaviFontUcitan","err","stil","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAACD,KAAK,CAACE,GAAN,CAAU,kCAAV,CAAd;AACAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,IAAMI,QAAQ,GAACL,KAAK,CAACE,GAAN,CAAU,oCAAV,CAAf;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SAAOR,IAAI,CAACS,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO,oCAFL;AAGpB,eAAWA,OAAO;AAHE,GAAf,CAAP;AAKD,CAND;;AAQA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACYb,QAAQ,CAAC,KAAD,CADpB;AAAA;AAAA,MACrBc,UADqB;AAAA,MACTC,iBADS;;AAG5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,aADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMK,iBAAiB,CAAC,IAAD,CAAvB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,eAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAAT;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;AACD,IAAMC,IAAI,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAb","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\nimport Navigator from \"./navigacija/Navigator\";\r\nimport axios from 'axios'\r\n\r\nconst promise=axios.get('http://localhost:3001/api/vjezbe')\r\nconsole.log(promise)\r\n\r\nconst promise2=axios.get('http://localhost:3001/api/v22jezbe')\r\nconsole.log(promise2)\r\n\r\nconst ucitajFontove = () => {\r\n  return Font.loadAsync({\r\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\r\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\r\n    \"raleway\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\r\n  });\r\n};\r\n\r\nexport default function App() {\r\n  const [fontUcitan, postaviFontUcitan] = useState(false);\r\n \r\n  if (!fontUcitan) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={ucitajFontove}\r\n        onFinish={() => postaviFontUcitan(true)}\r\n        onError={(err) => console.log(err)}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Navigator /> \r\n      );\r\n}\r\nconst stil = StyleSheet.create({});"]},"metadata":{},"sourceType":"module"}