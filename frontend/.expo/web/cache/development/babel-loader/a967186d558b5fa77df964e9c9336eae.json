{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Matea\\\\Desktop\\\\projekt-MateaLaca\\\\frontend\\\\screens\\\\Kategorije.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport vjezbeServer from \"../src/services/vjezbe\";\nimport GridPrikaz from \"../components/GridPrikaz\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport NavButton from \"../components/NavButton\";\nimport { HeaderTitle } from \"react-navigation-stack\";\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\n\nvar Kategorije = function Kategorije(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      vjezbe = _useState2[0],\n      postaviVjezbe = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"effect hook\");\n    vjezbeServer.dohvatiSve().then(function (response) {\n      console.log(\"Podaci ucitani\");\n      postaviVjezbe(response.data);\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"Greska\");\n    });\n  });\n\n  var kategorije = _toConsumableArray(new Set(vjezbe.map(function (v) {\n    return v.kategorija;\n  })));\n\n  var renderGrid = function renderGrid(kategorije) {\n    return React.createElement(GridPrikaz, {\n      naziv: kategorije.item,\n      odabir: function odabir() {\n        props.navigation.navigate({\n          routeName: 'JednaKategorija',\n          params: {\n            katNaziv: kategorije.item\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: stil.ekran,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: kategorije,\n    renderItem: renderGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }), React.createElement(Button, {\n    title: \"Odjava\",\n    onPress: function onPress() {\n      props.navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nKategorije.navigationOptions = function (navData) {\n  return {\n    HeaderTitle: \"Sve kategorije\",\n    HeaderRight: function HeaderRight() {\n      React.createElement(HeaderButtons, {\n        HeaderButtonComponent: NavButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }\n      }, React.createElement(Item, {\n        title: \"Izbornik\",\n        iconName: \"home\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 8\n        }\n      }));\n    }\n  };\n};\n\nvar stil = StyleSheet.create({\n  gridElement: {\n    flex: 1,\n    margin: 0,\n    height: 100,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#74F6F7'\n  },\n  video: {\n    alignSelf: 'center',\n    width: 3 - 520,\n    height: 200\n  },\n  ekran: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\nexport default Kategorije;","map":{"version":3,"sources":["C:/Users/Matea/Desktop/projekt-MateaLaca/frontend/screens/Kategorije.js"],"names":["React","useEffect","useState","vjezbeServer","GridPrikaz","HeaderButtons","Item","NavButton","HeaderTitle","Ionicons","MaterialIcons","Kategorije","props","vjezbe","postaviVjezbe","console","log","dohvatiSve","then","response","data","catch","error","alert","kategorije","Set","map","v","kategorija","renderGrid","item","navigation","navigate","routeName","params","katNaziv","stil","ekran","navigationOptions","navData","HeaderRight","StyleSheet","create","gridElement","flex","margin","height","borderColor","borderWidth","container","justifyContent","backgroundColor","video","alignSelf","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, StyleSheet, Text, View ,FlatList,TouchableOpacity } from \"react-native\";\r\nimport vjezbeServer from '../src/services/vjezbe'\r\nimport GridPrikaz from \"../components/GridPrikaz\"\r\nimport {HeaderButtons, Item} from 'react-navigation-header-buttons'\r\nimport NavButton from '../components/NavButton';\r\nimport { HeaderTitle } from \"react-navigation-stack\";\r\nimport {Ionicons, MaterialIcons} from '@expo/vector-icons'\r\nconst Kategorije = (props) => {\r\n\r\nconst [vjezbe, postaviVjezbe]=useState([])\r\n\r\n  useEffect( ()=>{\r\n    console.log(\"effect hook\");\r\n    vjezbeServer.dohvatiSve().then((response) => {\r\n      console.log(\"Podaci ucitani\");\r\n      postaviVjezbe(response.data)\r\n    })\r\n     .catch(error =>{\r\n       console.log(error)\r\n       alert(`Greska`)\r\n     })\r\n  })\r\n  const kategorije = [...new Set(vjezbe.map(v => v.kategorija))]\r\n  \r\n  const renderGrid = (kategorije) => {\r\n    return (\r\n      <GridPrikaz \r\n      naziv={kategorije.item}\r\n      odabir={ ()=> {\r\n        props.navigation.navigate({\r\n               routeName: 'JednaKategorija',\r\n               params: {\r\n                 katNaziv: kategorije.item\r\n     } })  } }  \r\n     />\r\n )}\r\n   return (\r\n    <View style={stil.ekran}>    \r\n       <FlatList data={kategorije} renderItem={renderGrid} />\r\n      <Button title= 'Odjava' \r\n   onPress={()=> { props.navigation.navigate('Login') }}/>\r\n    </View>\r\n   );\r\n };\r\n\r\n Kategorije.navigationOptions = (navData) => {\r\n   return {\r\n    HeaderTitle: \"Sve kategorije\",\r\n    \t\r\n    HeaderRight: () => {\r\n      \r\n   <HeaderButtons HeaderButtonComponent={NavButton}>\r\n       <Item\r\n       title='Izbornik'\r\n       iconName='home'\r\n\r\n       />\r\n     </HeaderButtons>\r\n      \r\n      \r\n      //   <HeaderButtons>\r\n      //          <Ite\r\n      //  title='Izbornik' \r\n      //  iconName='menu'\r\n      //   icon\r\n    \r\n      //  />\r\n      //   </HeaderButtons>\r\n      \r\n    }\r\n   /*  headerLeft: () => <Text onPress={()=>{\r\n            navData.navigation.toggleDrawer()\r\n           }}> MENU</Text> */\r\n  //   {\r\n  //  return (\r\n  //    <HeaderButtons HeaderButtonComponent={NavButton}>\r\n  //      <Item\r\n  //      title='Izbornik' \r\n  //      iconName='menu'\r\n  //      onPress={()=>{\r\n  //       navData.navigation.toggleDrawer()\r\n  //      }}\r\n  //      />\r\n  //    </HeaderButtons>\r\n  //  )\r\n  //    }\r\n   }\r\n }\r\n\r\nconst stil = StyleSheet.create({\r\n  gridElement: {\r\n    flex: 1,\r\n    margin: 0,\r\n    height: 100,\r\n    borderColor:'black',\r\n    borderWidth:1\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#74F6F7',\r\n  },\r\n  video: {\r\n    alignSelf: 'center',\r\n    width: 3-520,\r\n    height: 200,\r\n  },\r\n  ekran: {\r\n    flex: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n});\r\n\r\nexport default Kategorije;"]},"metadata":{},"sourceType":"module"}